"use strict";(self.webpackChunktanuki_blog=self.webpackChunktanuki_blog||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"cognitive-services-pt1","metadata":{"permalink":"/blog/cognitive-services-pt1","source":"@site/blog/2023-02-17-cognitive-services/Cognitive services 99a82aaa20fc495ca1fb6032ad0a08a9.md","title":"Cognitive Services pt1 \ud83e\udde0","description":"l\u2019Intelligence Artificielle est la cr\xe9ation de logiciels qui imitent les capacit\xe9s et les comportements humains","date":"2023-02-17T00:00:00.000Z","formattedDate":"17 f\xe9vrier 2023","tags":[{"label":"Cogntive-Service","permalink":"/blog/tags/cogntive-service"},{"label":"Microsoft","permalink":"/blog/tags/microsoft"},{"label":"Azure","permalink":"/blog/tags/azure"},{"label":"AI","permalink":"/blog/tags/ai"},{"label":"Service","permalink":"/blog/tags/service"}],"readingTime":4.43,"hasTruncateMarker":false,"authors":[{"name":"Antoine Smet","title":"Developer - AI & prototype lover","url":"https://github.com/AntoineSmet","imageURL":"https://pbs.twimg.com/profile_images/1623747926383120385/50lti4WJ_400x400.jpg","key":"antoine"}],"frontMatter":{"slug":"cognitive-services-pt1","title":"Cognitive Services pt1 \ud83e\udde0","authors":["antoine"],"tags":["Cogntive-Service","Microsoft","Azure","AI","Service"]},"nextItem":{"title":"GitHub Actions - Ton premier workflow step by step!","permalink":"/blog/github-actions-introduction"}},"content":"### **l\u2019Intelligence Artificielle est la cr\xe9ation de logiciels qui imitent les capacit\xe9s et les comportements humains**\\n\\n\\n [GitHub - Cognitive Services](https://github.com/AntoineSmet/CognitiveServices.git)\\n\\n```bash\\ngit clone https://github.com/AntoineSmet/CognitiveServices.git\\n```\\n\\n\\n\\n## Introduction : artificial intelligence as service\\n\\nLes AIaaS (artificial intelligence as service) sont une offre qui vise \xe0 facilter les entreprises \xe0 ajouter des services d\u2019IA dans leurs applications. Celle-ci ne demande ni d\xe9veloppement de mod\xe8le ni d\u2019entra\xeenement car Azure fournit directement leurs propres mod\xe8les dont certains sont personnalisables.\\n\\nCela permet aux entreprises de gagner du temps et des co\xfbts en mati\xe8re de d\xe9veloppement et de maintien. De plus cela ne n\xe9cessite pas de grande comp\xe9tence en tant que data scientist !\\n\\nComment impl\xe9menter de l\u2019intelligence artificielle dans nos applications gr\xe2ce aux cognitive *services ?\\n\\n\\n> \ud83d\udca1  Services fait r\xe9f\xe9rence \xe0 un ensemble de fonctionnalit\xe9s qui peuvent \xeatre utilis\xe9es pour d\xe9velopper des applications et des solutions .\\n\\n\\n\\nLes Azures Cognitive Services sont des services d\u2019intelligence artificielle facile \xe0 int\xe9grer dans vos applications et solutions ! Ils se pr\xe9sentent comme des appels au *API et/ou *SDK \xe0 effectuer afin d\u2019ajouter facillement des composants d\u2019intelligence artificielle dans vos applications ! Les services Azure Cognitive Services permettent aux d\xe9veloppeurs de b\xe9n\xe9ficier de la puissance de l\'IA sans avoir \xe0 construire et \xe0 entra\xeener eux-m\xeames les mod\xe8les d\'IA complexes, ce qui peut \xeatre co\xfbteux et prendre beaucoup de temps. \\n\\n\\n> \ud83d\udca1  Kit de d\xe9veloppement logiciel est un ensemble d\'outils, de biblioth\xe8ques et de documentation qui aide les d\xe9veloppeurs \xe0 cr\xe9er des applications pour une plate-forme ou un syst\xe8me d\'exploitation sp\xe9cifique\\n\\n\\n> \ud83d\udca1 **API (** *Application Programming Interface )* est pour faire de fa\xe7on imag\xe9e , un serveur d\u2019un restaurant qui vient prendre la nourriture(service, donn\xe9es,\u2026 ) de la cuisine (base de donn\xe9es ) pour la servir au client\\n\\n\\nAvant que nous regardions comment int\xe9grer les differentes solutions, prenons le temps de diff\xe9renciers les services que nous propose Azure ! \\n\\nJe vais les s\xe9parer en 3 cat\xe9gories\\n\\n![Screenshot 2023-02-06 202724.png](Cognitive%20services%2099a82aaa20fc495ca1fb6032ad0a08a9/Screenshot_2023-02-06_202724.png)\\n\\n0. Machine Learning\\n\\nAzure Machine Learning, cette solution de service cloud permet de g\xe9rer des projets de Machine Learning. Souvent utilis\xe9 par les data scientist pour l\u2019apprentissage et le d\xe9ploiement des mod\xe8les, et gestion du *MLOps.\\n\\n\\n> \ud83d\udca1 MLOps ( machine learning + devOps ) est un ensemble de pratiques qui vise \xe0 d\xe9ployer et \xe0 maintenir des mod\xe8les d\'apprentissage automatique en production gr\xe2ce \xe0 un d\xe9veloppement continu dans le domaine logiciel\\n\\n\\n1. Custom Model\\n\\nUn custom model est comme sont nom l\u2019indique un mod\xe8le que l\u2019on va personnaliser avec nos propres donn\xe9es afin de remplir \xe0 une probl\xe9matique pr\xe9cise !\\n\\nLe custom model est un mod\xe8le d\'apprentissage qui est con\xe7u pour r\xe9pondre aux besoins sp\xe9cifiques d\'une personne ou d\'une organisation. Pour le consommer Il nous faudra simplement rajouter nos donn\xe9es personnelles dans un dataset  afin de l\u2019affiner. \\n\\nMais comment un custom model sans donn\xe9e de base peut-\xeatre efficace avec si peu de donn\xe9e ?\\n\\n![elon musk.jpg](Cognitive%20services%2099a82aaa20fc495ca1fb6032ad0a08a9/elon_musk.jpg)\\n\\nLa raison principale est l\'utilisation d\'algorithmes d\'apprentissage automatiques performants (Ici con\xe7u par Microsoft). Mais c\u2019est vrai qu\u2019avec un mod\xe8le entra\xeen\xe9 avec peu de donn\xe9es, il nous est difficile d\'obtenir une pr\xe9cision \xe9lev\xe9e, mais les custom model de ce type utilisent des techniques d\'apprentissage supervis\xe9es pour tirer parti au mieux des donn\xe9es disponibles. Cependant, pour obtenir les meilleurs r\xe9sultats, il est recommand\xe9 de fournir un dataset suffisant et diversifi\xe9 pour l\'entra\xeenement.\\n\\n\\n> \ud83d\udce2 Le grand point positif du custom model que propose Azure est la vitesse de r\xe9sultat que l\u2019on obtient avec un petit dataset\\n\\n\\n\\n1. Pre-Trained Model\\n\\nUn mod\xe8le pr\xe9-entrain\xe9 est un mod\xe8le cr\xe9\xe9 par un tiers et pr\xeat \xe0 \xeatre utilis\xe9 sans fournir de dataset ni d\u2019entrainement. Cette personne/entreprise a d\xe9j\xe0 effectu\xe9 ce travail de cr\xe9ation de mod\xe8le et d\u2019entrainement. Les mod\xe8les sont souvent utilis\xe9s par l\u2019utilisateur si le mod\xe8le correspond au m\xeame cas pr\xe9cis. Il est g\xe9neralement utilis\xe9 comme point de d\xe9part ou phase de test par les data scientist au lieu de commencer avec un mod\xe8le de 0.\\n\\nDans notre cas Azure (Microsoft) a cr\xe9\xe9 un mod\xe8le \xe0 grande \xe9chelle avec un \xe9norme *dataset g\xe9neralis\xe9 pour toucher le plus grand nombre possible d\u2019utilisateurs voulant utiliser ce service.\\n\\n\\n> \ud83d\udca1 Dataset (jeu de donn\xe9es) est un mot couramment utilis\xe9 en machine learning. Ils regroupent un ensemble de donn\xe9es qui peuvent se pr\xe9senter sous diff\xe9rents formats (textes, , images, son , vid\xe9o etc\u2026).\\n\\n\\n\\n \\n\\nVoici un tableau reprenant tous les cognitive services et indiquant s\u2019il fonctionne avec du pre-Trained Model ou du custom Model\\n\\n\\n> \ud83d\udce2 No training data required = Pre-trained Model\\n\\n> \ud83d\udce2 You provide some or all training data = Custom Model\\n\\n\\n![cognitve service.png](Cognitive%20services%2099a82aaa20fc495ca1fb6032ad0a08a9/cognitve_service.png)\\n\\n# Les domaines des **Cognitive Services**\\n\\n---\\n\\n> \ud83d\udce2 Le  repos github contient de nombreux exemples d\u2019impl\xe9mentation\\n\\n\\n![Screenshot 2023-02-07 113531.png](Cognitive%20services%2099a82aaa20fc495ca1fb6032ad0a08a9/Screenshot_2023-02-07_113531.png)\\n\\n## Les diff\xe9rents domaines d\u2019**Azure Cognitive Services**\\n\\n- **Speech** con\xe7u pour transcrire et convertir la parole en texte\\n    \\n    Reconnaissance vocale\\n    \\n    Synth\xe8se vocale\\n    \\n    Traduction vocale\\n    \\n    Reconnaissance de l\u2019orateur\\n    \\n- **Langage** permet de comprendre et de traiter le langage naturel, il est con\xe7u pour comprendre et traiter du texte \xe9crit\\n    \\n    Reconnaissance d\u2019entit\xe9\\n    \\n    Analyse de sentiment\\n    \\n    R\xe9ponse aux questions\\n    \\n    Language Understanding\\n    \\n    Traducteur\\n    \\n- **Vision** permet d\'analyser et de comprendre les images/vid\xe9os\\n    \\n     Face Api\\n    \\n    Custom Vision\\n    \\n    Computer vision\\n    \\n- **Decision** vous offre la possibilit\xe9 de faire des pr\xe9dictions ou des recommandations\\n    \\n    D\xe9tecteur d\u2019anomalies\\n    \\n    Mod\xe9rateur \\n    \\n    Personalizer\\n    \\n- **G\xe9n\xe9ration de contenue (OpenAi)** donne la possibilt\xe9 de cr\xe9er des images, textes , ect\u2026\\n    \\n    Les services d\u2019OpenAi ( Dall-e,..)"},{"id":"github-actions-introduction","metadata":{"permalink":"/blog/github-actions-introduction","source":"@site/blog/2023-02-17-github-actions-introduction/GitHub Actions - Ton premier workflow step by step 0e9e63cc6ea04ee3b4068124af3a72f6.md","title":"GitHub Actions - Ton premier workflow step by step!","description":"Pour commencer, GitHub Action, c\'est quoi?","date":"2023-02-17T00:00:00.000Z","formattedDate":"17 f\xe9vrier 2023","tags":[{"label":"github","permalink":"/blog/tags/github"},{"label":"actions","permalink":"/blog/tags/actions"},{"label":"workflows","permalink":"/blog/tags/workflows"},{"label":"devops","permalink":"/blog/tags/devops"}],"readingTime":4.905,"hasTruncateMarker":false,"authors":[{"name":"Lloyd Colart","title":"Developer - Devops Enthusiast - Creator","url":"https://github.com/Lloydcol","imageURL":"https://avatars.githubusercontent.com/u/55253106?s=400&u=4c6e038627560fea1c1a2ece11a335b59a6b1540&v=4","key":"lloyd"}],"frontMatter":{"slug":"github-actions-introduction","title":"GitHub Actions - Ton premier workflow step by step!","authors":["lloyd"],"tags":["github","actions","workflows","devops"]},"prevItem":{"title":"Cognitive Services pt1 \ud83e\udde0","permalink":"/blog/cognitive-services-pt1"},"nextItem":{"title":"En construction \ud83d\uded1\ud83d\udea7","permalink":"/blog/firstcommit"}},"content":"## Pour commencer, GitHub Action, c\'est quoi?\\n\\nGitHub Actions est une fonctionnalit\xe9 de GitHub. Disponible depuis le repo de ton projet, elle te permet d\u2019automatiser tes pipelines de CI/CD, de test, de securit\xe9, \u2026\\n\\nGitHub Actions te permet aussi d\u2019ex\xe9cuter des workflows lorsque d\u2019autres \xe9v\xe9nements se produisent dans ton repo. Par exemple, tu peux ex\xe9cuter un workflow pour ajouter automatiquement les tags appropri\xe9s chaque fois que quelqu\u2019un cr\xe9e une issue.\\n\\nGitHub fournit des machines virtuelles Linux, Windows et macOS pour ex\xe9cuter tes workflows, ou tu peux h\xe9berger tes propres runners dans ton propre centre de donn\xe9es ou ton infrastructure cloud.\\n\\nEn gros, il y en a pour tout les go\xfbts.\\n\\n## Le nerf de la guerre: les workflows.\\n\\nSelon la documentation de Microsoft, un workflow est un processus configurable, reproductible et d\xe9fini dans un fichier. Et je n\'ai rien \xe0 rajouter la dessus tellement \xe7a coule de source.\\n\\nQuand tu utilises GitHub Actions, tu d\xe9finis la configuration de ton workflow dans un fichier YAML. \\n\\nCe fichier doit \xeatre stock\xe9 dans ton projet au sein d\u2019un dossier nomm\xe9 .github comprenant un autre dossier workflows. Ce chemin \xe0 son importance car il permettra \xe0 GitHub d\'aller retrouver ton fichier pour l\'executer.\\n\\nAfin de mieux comprendre son fonctionnement, nous allons encore creuser un peu.\\n\\n## Le Runner.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled.png)\\n\\nTon workflow doit acc\xe9der \xe0 une machine ou un GPU dot\xe9 du syst\xe8me d\u2019exploitation pour pouvoir ex\xe9cuter les actions. C\'est l\xe0 que GitHub Actions utilise ces Runner. Ce sont des ordinateurs configur\xe9s pour ex\xe9cuter les \xe9tapes de d\xe9ploiement. \xc0 la place d\u2019une ex\xe9cution manuelle des commandes, le service GitHub Actions indique au Runner d\u2019ex\xe9cuter les \xe9tapes que tu as d\xe9finies dans le fichier YAML de workflow.\\n\\nAussi, GitHub Actions fournit plusieurs types de Runner pour les diff\xe9rents syst\xe8mes d\u2019exploitation, par exemple Linux ou Windows.\\n\\n## The eyes of the Triggers\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%201.png)\\n\\nLe Trigger va indiquer \xe0 GitHub Actions quand ex\xe9cuter ton workflow et il en existe plusieurs types:\\n\\n- Le push-event-trigger (CI trigger ou trigger d\u2019int\xe9gration continue pour utiliser mon meilleur franglais) permet d\'executer une action \xe0 chaque fois que l\'on apporte une modification \xe0 une branche sp\xe9cifique.\\n- L\'execution ton workflow par planification\\n- Le d\xe9clenchement manuel\\n- ...\\n\\n## Les Steps.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%202.png)\\n\\nUn Step repr\xe9sente une op\xe9ration unique qui sera effectu\xe9e par le workflow. Ce Step est similaire aux commandes individuelles que tu ex\xe9cutes dans Bash ou PowerShell. C\'est au sein de votre fichier YAML que tu vas d\xe9finir l\'ordre de ces diff\xe9rentes \xe9tapes.\\n\\n## Les Jobs.\\n\\nLes Jobs sont tout simplement une succession de steps, ni plus, ni moins! Lors de d\xe9ploiements plus gros ou plus complexe, il n\'est pas rare de voir un workflow contenant plusieurs jobs.\\n\\n## Anatomie d\'un workflow (derni\xe8re \xe9tape avant la grande aventure).\\n\\nRegardons de plus pr\xe8s cet exemple et examinons en d\xe9tail chaque partie du fichier :\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%203.png)\\n\\n- *name* : c\'est le nom du workflow. Il sera est affich\xe9 dans l\u2019interface web GitHub.\\n- *on* : c\'est notre Trigger! Il indique au workflow quand s\u2019ex\xe9cuter. Dans ce cas, on: [workflow_dispatch] indique que l\'on va le d\xe9clencher manuellement.\\n- *jobs* : \xe7a regroupe toutes les t\xe2ches dans ton workflow.\\n- *say-hello* : c\'est le nom du job.\\n- *runs-on* : pas compliqu\xe9, c\'est le Runner.\\n- *steps* : liste la s\xe9quence des \xe9tapes \xe0 ex\xe9cuter dans le travail.\\n\\n## Cr\xe9er et ex\xe9cuter son premier workflow de base! (Youpi on y est!)\\n\\nMaintenant que tu es devenu un as de la th\xe9orie, il est temps de tout mettre en pratique. Je te passe les \xe9tapes de cr\xe9ation d\'un repo sur GitHub et on retourne directement voir notre fichier YAML. (Oui celui-ci n\'a qu\'un seul step, l\'autre c\'\xe9tait un exemple, mais si tu l\'as vu, \xe7a prouve que tu suis!)\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%204.png)\\n\\nPour que GitHub puisse retrouver ton workflow, il est important de placer ton fichier dans un endroit bien pr\xe9cis. Au sein de ton projet, cr\xe9e un dossier nomm\xe9 *.github*, qui lui m\xeame contient un dossier *workflows.*\\n\\nC\'est celui-ci qui va contenir tes fichiers YAML.\\n\\nUne fois que tout est \xe0 sa place, il te suffit de commit et de push ton projet avec les commandes git habituelles.\\n\\n## Run workflow! Run!!!!\\n\\nA ce stade, si t\'as bien tout suivi, ton workflow a \xe9t\xe9 d\xe9tect\xe9 par GitHub et donc, doit apparaitre dans la liste de tes actions.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%205.png)\\n\\nPour executer ce beau monde, vu que l\'on \xe0 choissi un trigger de type manuel, clique d\'abord sur ton workflow et ensuite sur Run Workflow. En gros, comme sur la photo.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%206.png)\\n\\nCette op\xe9ration va d\xe9marrer une nouvelle ex\xe9cution de votre workflow. Cela peut prendre un certain temps en fonction de la complexit\xe9 de celui-ci. La page s\u2019actualise automatiquement et te montre o\xf9 en est l\'execution (file d\u2019attente, en cours d\u2019ex\xe9cution ou termin\xe9).\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%207.png)\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%208.png)\\n\\n## V\xe9rifier l\'execution de notre workflow.\\n\\nC\'est bien beau tout \xe7a, mais ton workflow, il \xe9tait pas sens\xe9 me dire bonjour?\\n\\nPas de panique, je vais te montrer l\'endroit o\xf9 tu pourras aller v\xe9rifier que ton workflow s\'est bien ex\xe9cut\xe9. (ou pas d\'ailleur)\\n\\nPour cel\xe0, il te suffit de raflaichir la page si \xe7a ne s\'est pas fait tout seul, de cliquer sur ton workflow et l\xe0, tu devrait tomber sur la liste de tes jobs ici encore une fois, on en a qu\'un, donc tout est ok).\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%209.png)\\n\\nSi l\'on va encore plus loin et que l\'on clique sur notre job, la page d\'informations de celui-ci s\u2019affiche, avec le journal des steps ex\xe9cut\xe9s par le workflow.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%2010.png)\\n\\nEn d\xe9roulant notre step \\"Dis bonjour Tanuki\\", on peut y voir l\'execution de celui-ci!\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%2011.png)\\n\\nEt voil\xe0, maintenant t\'es le nouveau roi de la GitHub Action!\\n\\nN\'h\xe9sites pas \xe0 tester des choses car comme je te l\u2019ai dit plus haut, les GitHub Action de servent pas uniquement \xe0 d\xe9ployer.\\n\\nLe boutton *New workflow* te permet d\'acc\xe9der \xe0 une multitude d\'exemple que tu n\'auras plus qu\'a modifier.\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%2012.png)\\n\\n![Untitled](GitHub%20Actions%20-%20Ton%20premier%20workflow%20step%20by%20step%200e9e63cc6ea04ee3b4068124af3a72f6/Untitled%2013.png)"},{"id":"firstcommit","metadata":{"permalink":"/blog/firstcommit","source":"@site/blog/2023-02-14-en-construction/En construction \ud83d\uded1\ud83d\udea7 45479ef38d2a4b148ee436a2025eefda.md","title":"En construction \ud83d\uded1\ud83d\udea7","description":"https://images.unsplash.com/photo-1536895058696-a69b1c7ba34f?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb","date":"2023-02-14T00:00:00.000Z","formattedDate":"14 f\xe9vrier 2023","tags":[],"readingTime":0.005,"hasTruncateMarker":false,"authors":[{"name":"Lloyd Colart","title":"Developer - Devops Enthusiast - Creator","url":"https://github.com/Lloydcol","imageURL":"https://avatars.githubusercontent.com/u/55253106?s=400&u=4c6e038627560fea1c1a2ece11a335b59a6b1540&v=4","key":"lloyd"}],"frontMatter":{"slug":"firstcommit","title":"En construction \ud83d\uded1\ud83d\udea7","authors":"lloyd"},"prevItem":{"title":"GitHub Actions - Ton premier workflow step by step!","permalink":"/blog/github-actions-introduction"}},"content":"![https://images.unsplash.com/photo-1536895058696-a69b1c7ba34f?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb](https://images.unsplash.com/photo-1536895058696-a69b1c7ba34f?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb)"}]}')}}]);